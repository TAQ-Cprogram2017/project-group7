#ifndef _LL_
#define _LL_



void start();//画背景
void output(int *pc[], int row, int col); //输出二维数组
void blank(int *pa[]);//挖空白
void connect(int *pa[], int *pb[]);//将二维数组a挖的空白填入完整b表
void copy(int *pb[], int *pd[]);//复制表
void showtable1(int *pb[]);//表库
void showtable2(int *pb[]);
void showtable3(int *pb[]);
void showtable4(int *pb[]);
void showtable5(int *pb[]);
void showtable6(int *pb[]);
void showtable7(int *pb[]);
void showtable8(int *pb[]);
void showtable9(int *pb[]);
void showtable10(int *pb[]);
void showtable11(int *pb[]);
void showtable12(int *pb[]);
void showtable13(int *pb[]);
void showtable14(int *pb[]);
void showtable15(int *pb[]);
void showtable16(int *pb[]);
void showtable17(int *pb[]);
void showtable18(int *pb[]);
void showtable19(int *pb[]);
void showtable20(int *pb[]);
void showtable21(int *pb[]);
void showtable22(int *pb[]);
void showtable23(int *pb[]);
void showtable24(int *pb[]);
void showtable25(int *pb[]);
void showtable26(int *pb[]);
void selecttable(int number, int *pb[]);//选择表
void game_clear(int *pc[]);//清屏
void draw(int *pc[]);//调取图像生成图像版二维数组
void start_1(int *pc[]);
void start_2();//游戏介绍
void start_3();//操作说明
void win();//赢之后画面
#endif#pragma once
